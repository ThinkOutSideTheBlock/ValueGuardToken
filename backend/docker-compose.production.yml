version: "3.9"

services:
  db:
    image: postgres:15
    env_file:
      - ${ENV_FILE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h $${POSTGRES_HOST}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - app-network

  web:
    build:
      context: .
      secrets:
        - env_file
    # The default CMD from the Dockerfile will be used, which is Gunicorn.
    # command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ${ENV_FILE}  
    volumes:
      - ${ENV_FILE}:/app/.env:ro 
      - /var/log/backend-web-mobile-app/prod/django_app:/app/logs
    ports:
      - "${EX_WEB_PORT}:8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - app-network

  celery-worker:
    build:
        context: .
        secrets:
        - env_file
    # We need to override the default command for the celery worker.
    env_file:
      - ${ENV_FILE}  
    command: celery -A config worker -l info
    volumes:
      - ${ENV_FILE}:/app/.env:ro
      - /var/log/backend-web-mobile-app/prod/celery_worker:/app/logs
    depends_on:
      web:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

  celery-beat:
    build:
        context: .
        secrets:
        - env_file
    # We need to override the default command for the celery worker.
    env_file:
      - ${ENV_FILE}  
    command: celery -A config beat -l info
    volumes:
      - ${ENV_FILE}:/app/.env:ro
      - /var/log/backend-web-mobile-app/prod/celery_worker:/app/logs
    depends_on:
      web:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

secrets:
  env_file:
    file: ${ENV_FILE}

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: